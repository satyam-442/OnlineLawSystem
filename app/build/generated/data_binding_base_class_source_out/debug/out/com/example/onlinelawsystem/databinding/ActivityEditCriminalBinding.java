// Generated by view binder compiler. Do not edit!
package com.example.onlinelawsystem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.onlinelawsystem.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditCriminalBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputLayout editCriminalAddress;

  @NonNull
  public final TextInputLayout editCriminalAlias;

  @NonNull
  public final TextInputLayout editCriminalCaseDetails;

  @NonNull
  public final TextInputLayout editCriminalDOB;

  @NonNull
  public final TextInputLayout editCriminalFullname;

  @NonNull
  public final TextInputLayout editCriminalGender;

  @NonNull
  public final RadioGroup genderGroup;

  @NonNull
  public final RadioButton setupFemale;

  @NonNull
  public final RadioButton setupMale;

  @NonNull
  public final RadioButton setupOther;

  @NonNull
  public final MaterialButton updateCriminalBtn;

  private ActivityEditCriminalBinding(@NonNull LinearLayout rootView,
      @NonNull TextInputLayout editCriminalAddress, @NonNull TextInputLayout editCriminalAlias,
      @NonNull TextInputLayout editCriminalCaseDetails, @NonNull TextInputLayout editCriminalDOB,
      @NonNull TextInputLayout editCriminalFullname, @NonNull TextInputLayout editCriminalGender,
      @NonNull RadioGroup genderGroup, @NonNull RadioButton setupFemale,
      @NonNull RadioButton setupMale, @NonNull RadioButton setupOther,
      @NonNull MaterialButton updateCriminalBtn) {
    this.rootView = rootView;
    this.editCriminalAddress = editCriminalAddress;
    this.editCriminalAlias = editCriminalAlias;
    this.editCriminalCaseDetails = editCriminalCaseDetails;
    this.editCriminalDOB = editCriminalDOB;
    this.editCriminalFullname = editCriminalFullname;
    this.editCriminalGender = editCriminalGender;
    this.genderGroup = genderGroup;
    this.setupFemale = setupFemale;
    this.setupMale = setupMale;
    this.setupOther = setupOther;
    this.updateCriminalBtn = updateCriminalBtn;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditCriminalBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditCriminalBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit_criminal, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditCriminalBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editCriminalAddress;
      TextInputLayout editCriminalAddress = ViewBindings.findChildViewById(rootView, id);
      if (editCriminalAddress == null) {
        break missingId;
      }

      id = R.id.editCriminalAlias;
      TextInputLayout editCriminalAlias = ViewBindings.findChildViewById(rootView, id);
      if (editCriminalAlias == null) {
        break missingId;
      }

      id = R.id.editCriminalCaseDetails;
      TextInputLayout editCriminalCaseDetails = ViewBindings.findChildViewById(rootView, id);
      if (editCriminalCaseDetails == null) {
        break missingId;
      }

      id = R.id.editCriminalDOB;
      TextInputLayout editCriminalDOB = ViewBindings.findChildViewById(rootView, id);
      if (editCriminalDOB == null) {
        break missingId;
      }

      id = R.id.editCriminalFullname;
      TextInputLayout editCriminalFullname = ViewBindings.findChildViewById(rootView, id);
      if (editCriminalFullname == null) {
        break missingId;
      }

      id = R.id.editCriminalGender;
      TextInputLayout editCriminalGender = ViewBindings.findChildViewById(rootView, id);
      if (editCriminalGender == null) {
        break missingId;
      }

      id = R.id.genderGroup;
      RadioGroup genderGroup = ViewBindings.findChildViewById(rootView, id);
      if (genderGroup == null) {
        break missingId;
      }

      id = R.id.setupFemale;
      RadioButton setupFemale = ViewBindings.findChildViewById(rootView, id);
      if (setupFemale == null) {
        break missingId;
      }

      id = R.id.setupMale;
      RadioButton setupMale = ViewBindings.findChildViewById(rootView, id);
      if (setupMale == null) {
        break missingId;
      }

      id = R.id.setupOther;
      RadioButton setupOther = ViewBindings.findChildViewById(rootView, id);
      if (setupOther == null) {
        break missingId;
      }

      id = R.id.updateCriminalBtn;
      MaterialButton updateCriminalBtn = ViewBindings.findChildViewById(rootView, id);
      if (updateCriminalBtn == null) {
        break missingId;
      }

      return new ActivityEditCriminalBinding((LinearLayout) rootView, editCriminalAddress,
          editCriminalAlias, editCriminalCaseDetails, editCriminalDOB, editCriminalFullname,
          editCriminalGender, genderGroup, setupFemale, setupMale, setupOther, updateCriminalBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
