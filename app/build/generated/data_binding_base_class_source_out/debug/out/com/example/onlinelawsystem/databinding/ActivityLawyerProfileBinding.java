// Generated by view binder compiler. Do not edit!
package com.example.onlinelawsystem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.onlinelawsystem.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLawyerProfileBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView lawyerAge;

  @NonNull
  public final TextView lawyerContact;

  @NonNull
  public final TextView lawyerCourt;

  @NonNull
  public final TextView lawyerEmail;

  @NonNull
  public final TextView lawyerExpertise;

  @NonNull
  public final TextView lawyerName;

  @NonNull
  public final TextView lawyerQualification;

  private ActivityLawyerProfileBinding(@NonNull LinearLayout rootView, @NonNull TextView lawyerAge,
      @NonNull TextView lawyerContact, @NonNull TextView lawyerCourt, @NonNull TextView lawyerEmail,
      @NonNull TextView lawyerExpertise, @NonNull TextView lawyerName,
      @NonNull TextView lawyerQualification) {
    this.rootView = rootView;
    this.lawyerAge = lawyerAge;
    this.lawyerContact = lawyerContact;
    this.lawyerCourt = lawyerCourt;
    this.lawyerEmail = lawyerEmail;
    this.lawyerExpertise = lawyerExpertise;
    this.lawyerName = lawyerName;
    this.lawyerQualification = lawyerQualification;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLawyerProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLawyerProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_lawyer_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLawyerProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.lawyerAge;
      TextView lawyerAge = ViewBindings.findChildViewById(rootView, id);
      if (lawyerAge == null) {
        break missingId;
      }

      id = R.id.lawyerContact;
      TextView lawyerContact = ViewBindings.findChildViewById(rootView, id);
      if (lawyerContact == null) {
        break missingId;
      }

      id = R.id.lawyerCourt;
      TextView lawyerCourt = ViewBindings.findChildViewById(rootView, id);
      if (lawyerCourt == null) {
        break missingId;
      }

      id = R.id.lawyerEmail;
      TextView lawyerEmail = ViewBindings.findChildViewById(rootView, id);
      if (lawyerEmail == null) {
        break missingId;
      }

      id = R.id.lawyerExpertise;
      TextView lawyerExpertise = ViewBindings.findChildViewById(rootView, id);
      if (lawyerExpertise == null) {
        break missingId;
      }

      id = R.id.lawyerName;
      TextView lawyerName = ViewBindings.findChildViewById(rootView, id);
      if (lawyerName == null) {
        break missingId;
      }

      id = R.id.lawyerQualification;
      TextView lawyerQualification = ViewBindings.findChildViewById(rootView, id);
      if (lawyerQualification == null) {
        break missingId;
      }

      return new ActivityLawyerProfileBinding((LinearLayout) rootView, lawyerAge, lawyerContact,
          lawyerCourt, lawyerEmail, lawyerExpertise, lawyerName, lawyerQualification);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
