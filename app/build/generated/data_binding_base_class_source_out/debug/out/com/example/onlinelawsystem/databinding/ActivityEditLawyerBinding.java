// Generated by view binder compiler. Do not edit!
package com.example.onlinelawsystem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.onlinelawsystem.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditLawyerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Spinner courtSpinner;

  @NonNull
  public final TextView editCourtSpinnerText;

  @NonNull
  public final TextView editExpertiseSpinnerText;

  @NonNull
  public final TextInputLayout editLawyerAge;

  @NonNull
  public final TextInputLayout editLawyerContact;

  @NonNull
  public final TextInputLayout editLawyerFullname;

  @NonNull
  public final TextInputLayout editLawyerQualification;

  @NonNull
  public final Spinner expertiseSpinner;

  @NonNull
  public final MaterialButton updateLawyerBtn;

  private ActivityEditLawyerBinding(@NonNull LinearLayout rootView, @NonNull Spinner courtSpinner,
      @NonNull TextView editCourtSpinnerText, @NonNull TextView editExpertiseSpinnerText,
      @NonNull TextInputLayout editLawyerAge, @NonNull TextInputLayout editLawyerContact,
      @NonNull TextInputLayout editLawyerFullname, @NonNull TextInputLayout editLawyerQualification,
      @NonNull Spinner expertiseSpinner, @NonNull MaterialButton updateLawyerBtn) {
    this.rootView = rootView;
    this.courtSpinner = courtSpinner;
    this.editCourtSpinnerText = editCourtSpinnerText;
    this.editExpertiseSpinnerText = editExpertiseSpinnerText;
    this.editLawyerAge = editLawyerAge;
    this.editLawyerContact = editLawyerContact;
    this.editLawyerFullname = editLawyerFullname;
    this.editLawyerQualification = editLawyerQualification;
    this.expertiseSpinner = expertiseSpinner;
    this.updateLawyerBtn = updateLawyerBtn;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditLawyerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditLawyerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit_lawyer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditLawyerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.courtSpinner;
      Spinner courtSpinner = ViewBindings.findChildViewById(rootView, id);
      if (courtSpinner == null) {
        break missingId;
      }

      id = R.id.editCourtSpinnerText;
      TextView editCourtSpinnerText = ViewBindings.findChildViewById(rootView, id);
      if (editCourtSpinnerText == null) {
        break missingId;
      }

      id = R.id.editExpertiseSpinnerText;
      TextView editExpertiseSpinnerText = ViewBindings.findChildViewById(rootView, id);
      if (editExpertiseSpinnerText == null) {
        break missingId;
      }

      id = R.id.editLawyerAge;
      TextInputLayout editLawyerAge = ViewBindings.findChildViewById(rootView, id);
      if (editLawyerAge == null) {
        break missingId;
      }

      id = R.id.editLawyerContact;
      TextInputLayout editLawyerContact = ViewBindings.findChildViewById(rootView, id);
      if (editLawyerContact == null) {
        break missingId;
      }

      id = R.id.editLawyerFullname;
      TextInputLayout editLawyerFullname = ViewBindings.findChildViewById(rootView, id);
      if (editLawyerFullname == null) {
        break missingId;
      }

      id = R.id.editLawyerQualification;
      TextInputLayout editLawyerQualification = ViewBindings.findChildViewById(rootView, id);
      if (editLawyerQualification == null) {
        break missingId;
      }

      id = R.id.expertiseSpinner;
      Spinner expertiseSpinner = ViewBindings.findChildViewById(rootView, id);
      if (expertiseSpinner == null) {
        break missingId;
      }

      id = R.id.updateLawyerBtn;
      MaterialButton updateLawyerBtn = ViewBindings.findChildViewById(rootView, id);
      if (updateLawyerBtn == null) {
        break missingId;
      }

      return new ActivityEditLawyerBinding((LinearLayout) rootView, courtSpinner,
          editCourtSpinnerText, editExpertiseSpinnerText, editLawyerAge, editLawyerContact,
          editLawyerFullname, editLawyerQualification, expertiseSpinner, updateLawyerBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
