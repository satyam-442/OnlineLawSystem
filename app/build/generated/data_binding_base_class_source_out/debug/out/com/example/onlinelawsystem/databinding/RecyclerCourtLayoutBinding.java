// Generated by view binder compiler. Do not edit!
package com.example.onlinelawsystem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.onlinelawsystem.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclerCourtLayoutBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView recyclerCourtAddress;

  @NonNull
  public final TextView recyclerCourtCity;

  @NonNull
  public final TextView recyclerCourtContact;

  @NonNull
  public final TextView recyclerCourtName;

  @NonNull
  public final TextView recyclerCourtType;

  private RecyclerCourtLayoutBinding(@NonNull CardView rootView, @NonNull ImageView imageView,
      @NonNull TextView recyclerCourtAddress, @NonNull TextView recyclerCourtCity,
      @NonNull TextView recyclerCourtContact, @NonNull TextView recyclerCourtName,
      @NonNull TextView recyclerCourtType) {
    this.rootView = rootView;
    this.imageView = imageView;
    this.recyclerCourtAddress = recyclerCourtAddress;
    this.recyclerCourtCity = recyclerCourtCity;
    this.recyclerCourtContact = recyclerCourtContact;
    this.recyclerCourtName = recyclerCourtName;
    this.recyclerCourtType = recyclerCourtType;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerCourtLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerCourtLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recycler_court_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerCourtLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.recyclerCourtAddress;
      TextView recyclerCourtAddress = ViewBindings.findChildViewById(rootView, id);
      if (recyclerCourtAddress == null) {
        break missingId;
      }

      id = R.id.recyclerCourtCity;
      TextView recyclerCourtCity = ViewBindings.findChildViewById(rootView, id);
      if (recyclerCourtCity == null) {
        break missingId;
      }

      id = R.id.recyclerCourtContact;
      TextView recyclerCourtContact = ViewBindings.findChildViewById(rootView, id);
      if (recyclerCourtContact == null) {
        break missingId;
      }

      id = R.id.recyclerCourtName;
      TextView recyclerCourtName = ViewBindings.findChildViewById(rootView, id);
      if (recyclerCourtName == null) {
        break missingId;
      }

      id = R.id.recyclerCourtType;
      TextView recyclerCourtType = ViewBindings.findChildViewById(rootView, id);
      if (recyclerCourtType == null) {
        break missingId;
      }

      return new RecyclerCourtLayoutBinding((CardView) rootView, imageView, recyclerCourtAddress,
          recyclerCourtCity, recyclerCourtContact, recyclerCourtName, recyclerCourtType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
