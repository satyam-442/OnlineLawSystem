// Generated by view binder compiler. Do not edit!
package com.example.onlinelawsystem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.onlinelawsystem.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclerCaseLayoutBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView recyclerCaseDetail;

  @NonNull
  public final TextView recyclerUserAge;

  @NonNull
  public final TextView recyclerUserContact;

  @NonNull
  public final TextView recyclerUserExpertise;

  @NonNull
  public final TextView recyclerUserName;

  @NonNull
  public final TextView recyclerUserStatus;

  private RecyclerCaseLayoutBinding(@NonNull CardView rootView,
      @NonNull TextView recyclerCaseDetail, @NonNull TextView recyclerUserAge,
      @NonNull TextView recyclerUserContact, @NonNull TextView recyclerUserExpertise,
      @NonNull TextView recyclerUserName, @NonNull TextView recyclerUserStatus) {
    this.rootView = rootView;
    this.recyclerCaseDetail = recyclerCaseDetail;
    this.recyclerUserAge = recyclerUserAge;
    this.recyclerUserContact = recyclerUserContact;
    this.recyclerUserExpertise = recyclerUserExpertise;
    this.recyclerUserName = recyclerUserName;
    this.recyclerUserStatus = recyclerUserStatus;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerCaseLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerCaseLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recycler_case_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerCaseLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.recyclerCaseDetail;
      TextView recyclerCaseDetail = ViewBindings.findChildViewById(rootView, id);
      if (recyclerCaseDetail == null) {
        break missingId;
      }

      id = R.id.recyclerUserAge;
      TextView recyclerUserAge = ViewBindings.findChildViewById(rootView, id);
      if (recyclerUserAge == null) {
        break missingId;
      }

      id = R.id.recyclerUserContact;
      TextView recyclerUserContact = ViewBindings.findChildViewById(rootView, id);
      if (recyclerUserContact == null) {
        break missingId;
      }

      id = R.id.recyclerUserExpertise;
      TextView recyclerUserExpertise = ViewBindings.findChildViewById(rootView, id);
      if (recyclerUserExpertise == null) {
        break missingId;
      }

      id = R.id.recyclerUserName;
      TextView recyclerUserName = ViewBindings.findChildViewById(rootView, id);
      if (recyclerUserName == null) {
        break missingId;
      }

      id = R.id.recyclerUserStatus;
      TextView recyclerUserStatus = ViewBindings.findChildViewById(rootView, id);
      if (recyclerUserStatus == null) {
        break missingId;
      }

      return new RecyclerCaseLayoutBinding((CardView) rootView, recyclerCaseDetail, recyclerUserAge,
          recyclerUserContact, recyclerUserExpertise, recyclerUserName, recyclerUserStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
