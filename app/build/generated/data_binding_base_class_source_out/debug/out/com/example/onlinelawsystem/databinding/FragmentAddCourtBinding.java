// Generated by view binder compiler. Do not edit!
package com.example.onlinelawsystem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.onlinelawsystem.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddCourtBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton courtAddBtn;

  @NonNull
  public final TextInputLayout courtAddress;

  @NonNull
  public final TextView courtCategoryText;

  @NonNull
  public final TextInputLayout courtCity;

  @NonNull
  public final TextInputLayout courtContact;

  @NonNull
  public final TextInputLayout courtName;

  @NonNull
  public final Spinner courtTypeSpinner;

  private FragmentAddCourtBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton courtAddBtn, @NonNull TextInputLayout courtAddress,
      @NonNull TextView courtCategoryText, @NonNull TextInputLayout courtCity,
      @NonNull TextInputLayout courtContact, @NonNull TextInputLayout courtName,
      @NonNull Spinner courtTypeSpinner) {
    this.rootView = rootView;
    this.courtAddBtn = courtAddBtn;
    this.courtAddress = courtAddress;
    this.courtCategoryText = courtCategoryText;
    this.courtCity = courtCity;
    this.courtContact = courtContact;
    this.courtName = courtName;
    this.courtTypeSpinner = courtTypeSpinner;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddCourtBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddCourtBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add_court, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddCourtBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.courtAddBtn;
      MaterialButton courtAddBtn = ViewBindings.findChildViewById(rootView, id);
      if (courtAddBtn == null) {
        break missingId;
      }

      id = R.id.courtAddress;
      TextInputLayout courtAddress = ViewBindings.findChildViewById(rootView, id);
      if (courtAddress == null) {
        break missingId;
      }

      id = R.id.courtCategoryText;
      TextView courtCategoryText = ViewBindings.findChildViewById(rootView, id);
      if (courtCategoryText == null) {
        break missingId;
      }

      id = R.id.courtCity;
      TextInputLayout courtCity = ViewBindings.findChildViewById(rootView, id);
      if (courtCity == null) {
        break missingId;
      }

      id = R.id.courtContact;
      TextInputLayout courtContact = ViewBindings.findChildViewById(rootView, id);
      if (courtContact == null) {
        break missingId;
      }

      id = R.id.courtName;
      TextInputLayout courtName = ViewBindings.findChildViewById(rootView, id);
      if (courtName == null) {
        break missingId;
      }

      id = R.id.courtTypeSpinner;
      Spinner courtTypeSpinner = ViewBindings.findChildViewById(rootView, id);
      if (courtTypeSpinner == null) {
        break missingId;
      }

      return new FragmentAddCourtBinding((LinearLayout) rootView, courtAddBtn, courtAddress,
          courtCategoryText, courtCity, courtContact, courtName, courtTypeSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
