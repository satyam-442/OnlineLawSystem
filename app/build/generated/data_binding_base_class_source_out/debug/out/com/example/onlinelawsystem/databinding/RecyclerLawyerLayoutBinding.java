// Generated by view binder compiler. Do not edit!
package com.example.onlinelawsystem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.onlinelawsystem.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclerLawyerLayoutBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView recyclerLawyerAge;

  @NonNull
  public final TextView recyclerLawyerContact;

  @NonNull
  public final TextView recyclerLawyerCourt;

  @NonNull
  public final TextView recyclerLawyerExpertise;

  @NonNull
  public final TextView recyclerLawyerName;

  @NonNull
  public final TextView recyclerLawyerQualification;

  private RecyclerLawyerLayoutBinding(@NonNull CardView rootView,
      @NonNull TextView recyclerLawyerAge, @NonNull TextView recyclerLawyerContact,
      @NonNull TextView recyclerLawyerCourt, @NonNull TextView recyclerLawyerExpertise,
      @NonNull TextView recyclerLawyerName, @NonNull TextView recyclerLawyerQualification) {
    this.rootView = rootView;
    this.recyclerLawyerAge = recyclerLawyerAge;
    this.recyclerLawyerContact = recyclerLawyerContact;
    this.recyclerLawyerCourt = recyclerLawyerCourt;
    this.recyclerLawyerExpertise = recyclerLawyerExpertise;
    this.recyclerLawyerName = recyclerLawyerName;
    this.recyclerLawyerQualification = recyclerLawyerQualification;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerLawyerLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerLawyerLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recycler_lawyer_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerLawyerLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.recyclerLawyerAge;
      TextView recyclerLawyerAge = ViewBindings.findChildViewById(rootView, id);
      if (recyclerLawyerAge == null) {
        break missingId;
      }

      id = R.id.recyclerLawyerContact;
      TextView recyclerLawyerContact = ViewBindings.findChildViewById(rootView, id);
      if (recyclerLawyerContact == null) {
        break missingId;
      }

      id = R.id.recyclerLawyerCourt;
      TextView recyclerLawyerCourt = ViewBindings.findChildViewById(rootView, id);
      if (recyclerLawyerCourt == null) {
        break missingId;
      }

      id = R.id.recyclerLawyerExpertise;
      TextView recyclerLawyerExpertise = ViewBindings.findChildViewById(rootView, id);
      if (recyclerLawyerExpertise == null) {
        break missingId;
      }

      id = R.id.recyclerLawyerName;
      TextView recyclerLawyerName = ViewBindings.findChildViewById(rootView, id);
      if (recyclerLawyerName == null) {
        break missingId;
      }

      id = R.id.recyclerLawyerQualification;
      TextView recyclerLawyerQualification = ViewBindings.findChildViewById(rootView, id);
      if (recyclerLawyerQualification == null) {
        break missingId;
      }

      return new RecyclerLawyerLayoutBinding((CardView) rootView, recyclerLawyerAge,
          recyclerLawyerContact, recyclerLawyerCourt, recyclerLawyerExpertise, recyclerLawyerName,
          recyclerLawyerQualification);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
